version: '3.8'

services:

  doctorapi:
    image: ${DOCKER_REGISTRY-}doctorapi
    build:
      context: .
      dockerfile: Services/DoctorAPI/DoctorAPI/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"

  doctor.db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=doctor-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    volumes:
      - doctordata:/var/lib/postgresql/data

  authapi:
    image: ${DOCKER_REGISTRY-}authapi
    build:
      context: .
      dockerfile: Services/AuthAPI/AuthAPI/Dockerfile
    ports:
      - "5100:5100"
      - "5101:5101"

  auth.db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=auth-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass
    ports:
      - "5433:5432"
    volumes:
      - authdata:/var/lib/postgresql/data

  officeapi:
    image: ${DOCKER_REGISTRY-}officeapi
    build:
      context: .
      dockerfile: Services/OfficesAPI/OfficeAPI/Dockerfile
    ports:
      - "5200:5200"
      - "5201:5201"

  office.db:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "officedata:/data/db"
      - "officedata:/data/configdb"

volumes:
    doctordata:
    authdata:
    officedata:
